---
resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:
# - name: terraform
#   type: terraform
#   source:
#     backend_type: gcs
#     backend_config:
#       bucket: ((bosh_lite_storage_bucket))
#       prefix: bosh-lite/
#       credentials: ((gcp_credentials_json))

- name: bosh-system-metrics-server-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-system-metrics-server-release
    branch: master
    private_key: ((cf-loggregator-oauth-bot-key))

- name: bosh-system-metrics-forwarder-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-system-metrics-forwarder-release
    branch: master
    private_key: ((cf-loggregator-oauth-bot-key))

- name: denver-locks
  type: git
  source:
    uri: git@github.com:pivotal-cf/denver-locks
    branch: master
    private_key: ((cf-loggregator-oauth-bot-key))

- name: deployments-loggregator
  type: git
  source: &deployments_loggregator
    uri: git@github.com:cloudfoundry/deployments-loggregator
    branch: master
    private_key: ((deployments-loggregator-key))

# This is here because concourse has a bug in which putting to a git resource
# creates a new version that can trigger jobs even if the commit has [ci skip]
# present.
- name: deployments-loggregator-with-changes
  type: git
  source: *deployments_loggregator

- name: bosh-deployment
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-deployment
    branch: master
    private_key: ((cf-loggregator-oauth-bot-key))

- name: bosh-bootloader
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-bootloader
    branch: master

- name: bosh-dns-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh-dns-release
    version: 0.2.0

# We need actual loggregator repo apart from the release to get the bosh-lite
# manifest
- name: loggregator-release-elect
  type: git
  source:
    uri: https://github.com/cloudfoundry/loggregator-release
    branch: v103.4

# ---------- CREATE FINAL RELEASE RESOURCES -----------
- name: bosh-system-metrics-forwarder-version
  type: semver
  source:
    initial_version: 0.0.0
    bucket: bosh-system-metrics-blobs
    key: forwarder-version
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))

- name: bosh-system-metrics-forwarder-final-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-system-metrics-forwarder-release
    branch: master
    private_key: ((cf-loggregator-oauth-bot-key))
    ignore_paths:
    - .final_builds
    - releases

- name: bosh-system-metrics-forwarder-release-github-release-drafts
  type: github-release
  source:
    user: cloudfoundry
    repository: bosh-system-metrics-forwarder-release
    access_token: ((concourse-metrix-github-access-token))
    drafts: true

- name: bosh-system-metrics-server-version
  type: semver
  source:
    initial_version: 0.0.0
    bucket: bosh-system-metrics-blobs
    key: server-version
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))

- name: bosh-system-metrics-server-final-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-system-metrics-server-release
    branch: master
    private_key: ((cf-loggregator-oauth-bot-key))
    ignore_paths:
    - .final_builds
    - releases

- name: bosh-system-metrics-server-release-github-release-drafts
  type: github-release
  source:
    user: cloudfoundry
    repository: bosh-system-metrics-server-release
    access_token: ((concourse-metrix-github-access-token))
    drafts: true

- name: server-release-s3
  type: s3
  source:
    bucket: bosh-system-metrics-server-final-releases
    regexp: bosh-system-metrics-server-release-(.*).tgz
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))

- name: forwarder-release-s3
  type: s3
  source:
    bucket: bosh-system-metrics-forwarder-final-releases
    regexp: bosh-system-metrics-forwarder-release-(.*).tgz
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))

# -----------------------------------------------
# JOBS
# -----------------------------------------------
jobs:
# -----------------------------------------------
# UNIT TESTS
# -----------------------------------------------
- name: run-server-unit-tests
  plan:
  - get: bosh-system-metrics-server-release
    trigger: true
  - task: unit-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfmetrics/indicators-build-and-test
          tag: latest
      inputs:
      - name: bosh-system-metrics-server-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -ex

            export GOPATH=$PWD/bosh-system-metrics-server-release/
            pushd bosh-system-metrics-server-release
              ./scripts/test
            popd
- name: run-forwarder-unit-tests
  plan:
  - get: bosh-system-metrics-forwarder-release
    trigger: true
  - task: unit-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfmetrics/indicators-build-and-test
          tag: latest

      inputs:
      - name: bosh-system-metrics-forwarder-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -ex

            export GOPATH=$PWD/bosh-system-metrics-forwarder-release/
            pushd bosh-system-metrics-forwarder-release
            ./scripts/test
            popd


# --------------------------------------------------
# UPDATE ACCEPTANCE ENV
# --------------------------------------------------

- name: deploy-loggregator-with-metrics-forwarder
  plan:
  - in_parallel:
    - get: bosh-system-metrics-server-release
      trigger: true
      passed:
      - run-server-unit-tests
    - get: bosh-system-metrics-forwarder-release
      trigger: true
      passed:
      - run-forwarder-unit-tests
    - get: deployments-loggregator
    - get: bosh-deployment
    - get: bosh-bootloader
    - get: bosh-dns-release
    - get: loggregator-repo
      resource: loggregator-release-elect
  - task: deploy-director-with-metrics-server
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundrydevelopers/bosh-system-metrics-ci
      inputs:
      - name: bosh-system-metrics-server-release
      - name: bosh-system-metrics-forwarder-release
      - name: bosh-deployment
      - name: bosh-bootloader
      - name: deployments-loggregator
      outputs:
      - name: updated-deployments-loggregator
      params:
        DEPLOY_DIR: deployments-loggregator/bosh-lites/bosh-system-metrics
        ENV_NAME: acceptance
        SUBNET_PREFIX: 10.0.0
        SUBNETWORK: bosh-lite
        DIRECTOR_IP: ((bosh-system-metrics-acceptance-director-external-ip))
        GCLOUD: /root/google-cloud-sdk/bin/gcloud
        S3_BUCKET: bosh-system-metrics-blobs
        S3_ACCESS_KEY: ((aws-access-key-id))
        S3_SECRET_KEY: ((aws-secret-access-key))
      run:
        path: bash
        args:
          - -c
          - ((create-acceptance-bosh-lite-with-metrics-server))
  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfmetrics/indicators-build-and-test
      inputs:
      - name: updated-deployments-loggregator
      outputs:
      - name: committed-deployments-loggregator
      params:
        SOURCE: updated-deployments-loggregator
        PATHS: bosh-lites/bosh-system-metrics
        COMMIT_MESSAGE: "Create system-metrics acceptance bosh-lite GCP director"
        OUTPUT: committed-deployments-loggregator
      run:
        path: bash
        args:
        - -c
        - ((commit))
  - put: deployments-loggregator-with-changes
    params:
      repository: committed-deployments-loggregator
      rebase: true
  - task: deploy-loggregator-with-metrics-forwarder
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfmetrics/indicators-build-and-test
      inputs:
      - name: bosh-system-metrics-forwarder-release
      - name: deployments-loggregator
      - name: bosh-dns-release
      - name: loggregator-repo
      params:
        DEPLOY_DIR: deployments-loggregator/bosh-lites/bosh-system-metrics
        ENV_NAME: acceptance
        SUBNET_PREFIX: 10.0.0
        SUBNETWORK: acceptance-lite
        DIRECTOR_IP: ((bosh-system-metrics-acceptance-director-external-ip))
        S3_BUCKET: bosh-system-metrics-blobs
        S3_ACCESS_KEY: ((aws-access-key-id))
        S3_SECRET_KEY: ((aws-secret-access-key))
      run:
        path: bash
        args:
          - -c
          - ((deploy-loggregator-with-metrics-forwarder))



# --------------------------------------------------
# RUN SMOKE TESTS
# --------------------------------------------------

- name: run-smoke-tests
  serial_groups:
  - bosh-lite-lock
  plan:
  - in_parallel:
    - get: bosh-system-metrics-server-release
      trigger: true
      passed:
      - deploy-loggregator-with-metrics-forwarder
    - get: bosh-system-metrics-forwarder-release
      trigger: true
      passed:
      - deploy-loggregator-with-metrics-forwarder
    - get: deployments-loggregator
      resource: deployments-loggregator-with-changes
      trigger: true
      passed:
      - deploy-loggregator-with-metrics-forwarder
  - task: run-smokes
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfmetrics/indicators-build-and-test
      inputs:
      - name: deployments-loggregator
      - name: bosh-system-metrics-forwarder-release
      params:
        DIRECTOR_IP: ((bosh-system-metrics-acceptance-director-external-ip))
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eux
          echo "Running smoke tests..."

          deployment_dir=$PWD/deployments-loggregator/bosh-lites/bosh-system-metrics/acceptance
          pushd ${deployment_dir}
            export BOSH_CLIENT=admin
            export BOSH_CLIENT_SECRET=$(bosh interpolate creds.yml --path /admin_password)
            bosh interpolate creds.yml --path /director_ssl/ca > /tmp/bosh-ca.crt
            export BOSH_CA_CERT=/tmp/bosh-ca.crt
            export BOSH_ENVIRONMENT="https://$DIRECTOR_IP:25555"
            bosh interpolate creds.yml --path /jumpbox_ssh/private_key > /tmp/jumpbox.key
            chmod 600 /tmp/jumpbox.key
          popd

          # Setup ssh tunnel via director
          mkdir $HOME/.ssh || true
          ssh-keyscan $DIRECTOR_IP >> $HOME/.ssh/known_hosts
          ssh jumpbox@$DIRECTOR_IP -i /tmp/jumpbox.key -L 8081:$(bosh -d loggregator instances | grep log-api | awk '{print $4}'):8081 -N &

          smoke_tests_dir=bosh-system-metrics-forwarder-release/src/github.com/cloudfoundry/bosh-system-metrics-forwarder/cmd/smoke-tests
          pushd ${smoke_tests_dir}
            export LOGGREGATOR_ADDR="ws://localhost:8081"
            go run -mod=vendor main.go
          popd



# --------------------------------------------------
# CREATE FINAL RELEASES
# -------------------------------------------------

- name: create-server-final-release
  serial: true
  plan:
  - in_parallel:
    - get: version
      resource: bosh-system-metrics-server-version
    - get: release
      resource: bosh-system-metrics-server-release
      passed:
      - run-smoke-tests
  - task: create-final-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfmetrics/indicators-build-and-test
      inputs:
      - name: version
      - name: release
      outputs:
      - name: final-server-release
      - name: github-release
      params:
        RELEASE: release
        RELEASE_NAME: "bosh-system-metrics-server-release"
        S3_BUCKET: bosh-system-metrics-blobs
        S3_ACCESS_KEY: ((aws-access-key-id))
        S3_SECRET_KEY: ((aws-secret-access-key))
        OUTPUT: final-server-release
      run:
        path: bash
        args:
        - -c
        - ((create-final-release))

  - put: bosh-system-metrics-server-version
    params:
      bump: patch
  - put: bosh-system-metrics-server-final-release
    params:
      repository: final-server-release
      rebase: true
      tag: version/version
      tag_prefix: v
  - put: bosh-system-metrics-server-release-github-release-drafts
    params:
      name: github-release/name
      tag: github-release/tag
      body: github-release/body
      globs:
      - github-release/*.tgz
  - put: server-release-s3
    params:
      file: github-release/*.tgz
      acl: public-read


- name: create-forwarder-final-release
  serial: true
  plan:
  - in_parallel:
    - get: version
      resource: bosh-system-metrics-forwarder-version
    - get: release
      resource: bosh-system-metrics-forwarder-release
      passed:
      - run-smoke-tests
  - task: create-final-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfmetrics/indicators-build-and-test
      inputs:
      - name: version
      - name: release
      outputs:
      - name: final-forwarder-release
      - name: github-release
      params:
        RELEASE: release
        RELEASE_NAME: "bosh-system-metrics-forwarder-release"
        S3_BUCKET: bosh-system-metrics-blobs
        S3_ACCESS_KEY: ((aws-access-key-id))
        S3_SECRET_KEY: ((aws-secret-access-key))
        OUTPUT: final-forwarder-release
      run:
        path: bash
        args:
        - -c
        - ((create-final-release))

  - put: bosh-system-metrics-forwarder-version
    params:
      bump: patch
  - put: bosh-system-metrics-forwarder-final-release
    params:
      repository: final-forwarder-release
      rebase: true
      tag: version/version
      tag_prefix: v
  - put: bosh-system-metrics-forwarder-release-github-release-drafts
    params:
      name: github-release/name
      tag: github-release/tag
      body: github-release/body
      globs:
      - github-release/*.tgz
  - put: forwarder-release-s3
    params:
      file: github-release/*.tgz
      acl: public-read

- name: cleanup-bosh-lite
  serial: true
  serial_groups:
  - bosh-lite-lock
  plan:
  - in_parallel:
    - get: bosh-system-metrics-server-release
      trigger: true
    - get: bosh-system-metrics-forwarder-release
      trigger: true
    - get: denver-locks
    - get: deployments-loggregator
    - get: loggregator-release-elect
      trigger: true
  - task: delete-vms
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: google/cloud-sdk
      inputs:
      - name: deployments-loggregator
      params:
        RELEASE: release
        RELEASE_NAME: "bosh-system-metrics-forwarder-release"
        S3_BUCKET: bosh-system-metrics-blobs
        S3_ACCESS_KEY: ((aws-access-key-id))
        S3_SECRET_KEY: ((aws-secret-access-key))
        OUTPUT: final-forwarder-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -ex

          gcloud auth activate-service-account --key-file deployments-loggregator/bosh-lites/bosh-system-metrics/service-account.key.json
          gcloud config set project cff-loggregator
          instances=$( gcloud compute instances list --filter "bosh-system-metrics-ci" --format "get(name)" )
          if [ -z $instances ]; then
            echo "nothing to delete"
          else
          gcloud -q compute instances delete $instances --zone us-west1-a
          fi
  - task: delete-env-state
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: v3
      platform: linux
      inputs:
        - name: deployments-loggregator
      outputs:
      - name: updated-deployments-loggregator
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -ex
            pushd deployments-loggregator
              git rm bosh-lites/bosh-system-metrics/acceptance/state.json --ignore-unmatch
              git rm bosh-lites/bosh-system-metrics/acceptance/creds.yml --ignore-unmatch
            popd

            rsync -ac deployments-loggregator/ updated-deployments-loggregator
  - task: commit-env-state
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfmetrics/indicators-build-and-test
      inputs:
      - name: updated-deployments-loggregator
      outputs:
      - name: committed-deployments-loggregator
      params:
        SOURCE: updated-deployments-loggregator
        PATHS: bosh-lites/bosh-system-metrics/ci/
        COMMIT_MESSAGE: "Clean up bosh-system-metrics env state"
        OUTPUT: committed-deployments-loggregator
      run:
        path: bash
        args:
        - -c
        - ((commit))
  - put: deployments-loggregator-with-changes
    params:
      repository: committed-deployments-loggregator
      rebase: true

